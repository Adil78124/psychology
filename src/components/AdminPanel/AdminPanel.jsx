import React, { useEffect, useState } from "react";
import { auth, db } from "../../firebase";
import { 
  addDoc, 
  collection, 
  query, 
  orderBy, 
  onSnapshot, 
  deleteDoc, 
  doc, 
  serverTimestamp 
} from "firebase/firestore";
import { signOut } from "firebase/auth";
import "./AdminPanel.css";

export default function AdminPanel() {
  const [user, setUser] = useState(null);
  const [isAdmin, setIsAdmin] = useState(false);
  const [loading, setLoading] = useState(true);

  const [news, setNews] = useState([]);
  const [title, setTitle] = useState("");
  const [content, setContent] = useState("");
  const [imageUrl, setImageUrl] = useState("");
  const [link, setLink] = useState("");
  const [addingNews, setAddingNews] = useState(false);

  useEffect(() => {
    const unsub = auth.onAuthStateChanged(async (u) => {
      setUser(u);
      if (!u) {
        setIsAdmin(false);
        setLoading(false);
        return;
      }
      // –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∏ —á–∏—Ç–∞–µ–º claims
      const tokenRes = await u.getIdTokenResult(true);
      setIsAdmin(!!tokenRes.claims?.admin);
      setLoading(false);
    });

    // —Å–ª—É—à–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    const q = query(collection(db, "news"), orderBy("createdAt", "desc"));
    const unsubNews = onSnapshot(q, (snap) => {
      setNews(snap.docs.map(d => ({ id: d.id, ...d.data() })));
    });

    return () => { 
      unsub(); 
      unsubNews(); 
    };
  }, []);

  const addNews = async (e) => {
    e.preventDefault();
    if (!isAdmin) return alert("–ù–µ—Ç –ø—Ä–∞–≤");
    if (!title || !content) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
    
    setAddingNews(true);
    try {
      await addDoc(collection(db, "news"), {
        title,
        content,
        imageUrl: imageUrl.trim() || null,
        link: link.trim() || null,
        createdAt: serverTimestamp()
      });
      
      setTitle("");
      setContent("");
      setImageUrl("");
      setLink("");
      alert("‚úÖ –ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!");
    } catch (error) {
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏: " + error.message);
      console.error(error);
    } finally {
      setAddingNews(false);
    }
  };

  const remove = async (id) => {
    if (!isAdmin) return alert("–ù–µ—Ç –ø—Ä–∞–≤");
    if (!window.confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –Ω–æ–≤–æ—Å—Ç—å?")) return;
    
    try {
      await deleteDoc(doc(db, "news", id));
    } catch (error) {
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: " + error.message);
    }
  };

  const logout = async () => {
    await signOut(auth);
    window.location.reload();
  };

  if (loading) {
    return (
      <div className="admin-loading">
        <div className="loading-spinner"></div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      </div>
    );
  }

  if (!user) {
    return (
      <div className="admin-error">
        <h3>‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h3>
        <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É</p>
      </div>
    );
  }

  if (!isAdmin) {
    return (
      <div className="admin-error">
        <h3>üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω</h3>
        <p>–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</p>
        <button onClick={logout} className="btn btn-secondary">–í—ã–π—Ç–∏</button>
      </div>
    );
  }

  return (
    <div className="admin-panel">
      <div className="admin-header">
        <div className="container">
          <div className="admin-header-content">
            <div>
              <h1>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h1>
              <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.email}</p>
            </div>
            <button onClick={logout} className="btn btn-secondary">
              –í—ã–π—Ç–∏
            </button>
          </div>
        </div>
      </div>

      <div className="admin-content">
        <div className="container">
          {/* –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏ */}
          <section className="admin-section">
            <h2 className="section-title">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å</h2>
            <div className="add-news-card">
              <form onSubmit={addNews} className="news-form">
                <div className="form-group">
                  <label htmlFor="news-title">–ó–∞–≥–æ–ª–æ–≤–æ–∫</label>
                  <input
                    id="news-title"
                    type="text"
                    value={title}
                    onChange={e => setTitle(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏"
                    required
                  />
                </div>

                <div className="form-group">
                  <label htmlFor="news-content">–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ</label>
                  <textarea
                    id="news-content"
                    value={content}
                    onChange={e => setContent(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏"
                    rows="6"
                    required
                  />
                </div>

                <div className="form-group">
                  <label htmlFor="news-image-url">URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                  <input
                    id="news-image-url"
                    type="url"
                    value={imageUrl}
                    onChange={e => setImageUrl(e.target.value)}
                    placeholder="https://example.com/image.jpg"
                  />
                  <p className="field-hint">
                    üí° –ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞ <a href="https://imgur.com/upload" target="_blank" rel="noopener noreferrer">Imgur</a> –∏–ª–∏ <a href="https://cloudinary.com" target="_blank" rel="noopener noreferrer">Cloudinary</a>
                  </p>
                </div>

                <div className="form-group">
                  <label htmlFor="news-link">–í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                  <input
                    id="news-link"
                    type="url"
                    value={link}
                    onChange={e => setLink(e.target.value)}
                    placeholder="https://example.com"
                  />
                  <p className="field-hint">üìé –°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫, —Å—Ç–∞—Ç—å—é, Instagram –∏ —Ç.–¥.</p>
                </div>

                <button 
                  type="submit" 
                  className="btn btn-primary"
                  disabled={addingNews}
                >
                  {addingNews ? "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ..." : "‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å"}
                </button>
              </form>
            </div>
          </section>

          {/* –°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π */}
          <section className="admin-section">
            <h2 className="section-title">
              –í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ ({news.length})
            </h2>
            
            {news.length === 0 ? (
              <div className="empty-state">
                <p>üì∞ –ü–æ–∫–∞ –Ω–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π</p>
              </div>
            ) : (
              <div className="news-list">
                {news.map(n => (
                  <div key={n.id} className="news-item">
                    <div className="news-item-header">
                      <h3>{n.title}</h3>
                      <span className="news-date">
                        {n.createdAt?.toDate ? n.createdAt.toDate().toLocaleString('ru-RU') : "–¢–æ–ª—å–∫–æ —á—Ç–æ"}
                      </span>
                    </div>
                    
                    {n.imageUrl && (
                      <div className="news-item-image">
                        <img src={n.imageUrl} alt={n.title} />
                      </div>
                    )}
                    
                    <p className="news-text">{n.content}</p>
                    
                    {n.link && (
                      <div className="news-item-link">
                        <a href={n.link} target="_blank" rel="noopener noreferrer" className="external-link">
                          üîó –ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ ‚Üí
                        </a>
                      </div>
                    )}
                    
                    <div className="news-actions">
                      <button 
                        onClick={() => remove(n.id)} 
                        className="btn-delete"
                      >
                        üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </section>
        </div>
      </div>
    </div>
  );
}

